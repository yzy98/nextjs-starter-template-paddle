// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  created_time      DateTime  @default(now())
  email             String   @unique
  first_name        String?
  last_name         String?
  gender            String?
  profile_image_url String?
  clerk_id          String   @unique

  subscriptions     Subscription[]
}

model Product {
  id                Int       @id @default(autoincrement())
  paddle_product_id String    @unique
  name              String
  type              String?
  description       String?
  tax_category      String
  image_url         String?
  created_at        DateTime
  updated_at        DateTime

  prices            Price[]
  subscriptions     Subscription[]
}

model Price {
  id                        Int       @id @default(autoincrement())
  paddle_price_id           String    @unique
  product_id                String
  description               String
  name                      String?
  billing_cycle_interval    String?
  billing_cycle_frequency   Int?
  trial_period_interval     String?
  trial_period_frequency    Int?
  tax_mode                  String
  unit_price_amount         Int
  unit_price_currency       String
  created_at                DateTime
  updated_at                DateTime

  // Relations
  product                   Product   @relation(fields: [product_id], references: [paddle_product_id])

  subscriptions             Subscription[]

  @@index([product_id])

}

model Subscription {
  id                           Int       @id @default(autoincrement())
  paddle_subscription_id       String    @unique
  user_id                      String
  price_id                     String
  product_id                   String
  status                       String

  // Billing details
  price_amount                 Int
  price_currency               String
  collection_mode              String
  billing_cycle_interval       String
  billing_cycle_frequency      Int

  // Timestamps
  starts_at                    DateTime?
  renews_at                    DateTime?
  ends_at                      DateTime?
  trial_starts_at              DateTime?
  trial_ends_at                DateTime?
  canceled_at                  DateTime?
  scheduled_change             Json?

  // Relations
  user                         User      @relation(fields: [user_id], references: [clerk_id], onDelete: Cascade)
  price                        Price     @relation(fields: [price_id], references: [paddle_price_id])
  product                      Product   @relation(fields: [product_id], references: [paddle_product_id])

  @@index([user_id])
  @@index([price_id])
  @@index([product_id])
}
